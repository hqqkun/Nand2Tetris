// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {
    static int KBD;

    /** Initializes the keyboard. */
    function void init() {
        let KBD = 24576;
        return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        return Memory.peek(KBD);
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
        var char read_char;
        let read_char = 0;
        while (Keyboard.keyPressed() = 0) {
        }
        let read_char = Keyboard.keyPressed();
        while (~(Keyboard.keyPressed() = 0)) {
        }
        do Output.printChar(read_char);
        return read_char;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
        var String read_line;
		var char read_char;

        do Output.printString(message);
        let read_line = String.new(80);

Repeat:
        let read_char = Keyboard.readChar();
        if (read_char = 128) {
            do Output.println();
            return read_line;
        }
        if (read_char = 129) {
            do read_line.eraseLastChar();
            do Output.backSpace();
            do Output.backSpace();
        } else {
            do read_line.appendChar(read_char);
        }
        goto Repeat;
        return 0;
    }   

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
        var String number;
        let number = Keyboard.readLine(message);
        return number.intValue();
    }
}
